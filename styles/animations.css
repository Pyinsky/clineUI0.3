/* styles/animations.css */

/* Keyframe Definitions from implementation-config.json */
@keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes fadeOut {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

/* For search box transition to bottom and results appearing */
@keyframes slideToBottom { /* This might need adjustment based on actual layout */
    0% { 
        transform: translateY(0) scale(1);
        opacity: 1;
    }
    100% { 
        /* This target state needs to be dynamic or very carefully calculated.
           JS will likely handle the final positioning, CSS handles the animation 'feel'.
           For now, a conceptual downward movement.
        */
        transform: translateY(20vh) scale(0.95); /* Example: moves down and slightly shrinks */
        opacity: 0.8;
    }
}

@keyframes slideUpFromBottom { /* For search box appearing at bottom */
    0% {
        transform: translateY(100px);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}


@keyframes slideDown { /* For top bar appearing */
    0% { transform: translateY(-100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

@keyframes slideUp { /* For top bar disappearing */
    0% { transform: translateY(0); opacity: 1;}
    100% { transform: translateY(-100%); opacity: 0; }
}


@keyframes slideFromRight { /* For modals or side elements */
    0% { transform: translateX(100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

@keyframes slideToRight { /* For modals or side elements */
    0% { transform: translateX(0); opacity: 1; }
    100% { transform: translateX(100%); opacity: 0; }
}

@keyframes spin { /* For loading indicators */
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes pulse { /* Simple pulse effect for interactions */
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes shimmer { /* For loading placeholders */
    0% { background-position: -1000px 0; }
    100% { background-position: 1000px 0; }
}


/* Animation Utility Classes */
.fade-in {
    animation: fadeIn var(--transition-normal) ease-out forwards;
}

.fade-out {
    animation: fadeOut var(--transition-normal) ease-in forwards;
}

.slide-to-bottom-anim { /* Applied during search box transition */
    animation: slideToBottom var(--transition-slow) cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-up-from-bottom-anim { /* For search box appearing at bottom */
     animation: slideUpFromBottom var(--transition-normal) cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-down-anim { /* For top bar appearing */
    animation: slideDown var(--transition-normal) ease-out forwards;
}

.slide-up-anim { /* For top bar disappearing */
    animation: slideUp var(--transition-normal) ease-in forwards;
}

.slide-from-right-anim {
    animation: slideFromRight var(--transition-normal) cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-to-right-anim {
    animation: slideToRight var(--transition-normal) ease-in forwards;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

.animate-pulse {
    animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Shimmer effect for loading content */
.shimmer-bg {
    background-image: linear-gradient(to right, 
        var(--tertiary-dark) 0%, 
        rgba(255,255,255,0.05) 20%, /* Lighter part of shimmer */
        var(--tertiary-dark) 40%, 
        var(--tertiary-dark) 100%);
    background-repeat: no-repeat;
    background-size: 1000px 100%; /* Adjust size for desired shimmer width */
    animation: shimmer 1.5s linear infinite;
    color: transparent; /* Hide text while shimmering */
}
.shimmer-bg > * {
    visibility: hidden; /* Hide children content */
}


/* Page Transition Specific Animations (Conceptual) */
/* These classes would be added/removed by JavaScript during state changes */

/* Initial view elements fading out */
.initial-view-logo-fade-out {
    animation: fadeOut 0.3s ease-out forwards, scaleDown 0.3s ease-out forwards;
}
.initial-view-quickactions-fade-out {
    animation: fadeOut 0.3s ease-out 0.1s forwards; /* Slight delay */
}

@keyframes scaleDown {
    from { transform: scale(1); }
    to { transform: scale(0.9); }
}

/* Search results view elements fading in */
.search-results-view-fade-in {
    animation: fadeIn 0.4s ease-in 0.2s forwards; /* Delay after other elements move */
}

/* Specific component animations if needed beyond generic ones */
/* Example: Sidebar expand/collapse if not purely handled by width transition */
.sidebar-animate-expand {
    /* Custom animation if width transition isn't enough */
}
.sidebar-animate-collapse {
    /* Custom animation */
}
